name: Project - Get Item ID Within the Project
# This workflow gets the project-specific ID for an item within a project
# All downstream queries and mutations of fields within the project require this ID

on:
  workflow_call:
    inputs:
      PROJECT_ID:
        description: "The Project's graphQL node ID"
        type: string
        required: true

      FIELD_TYPE:
        description: "The type of the field [text, date, number]"
        type: string
        required: true

      SET_VALUE:
        description: "The value we'd like to set"
        type: string
        required: true

      FIELD_ID:
        description: "The graphQL node ID of the field"
        type: string
        required: true
        
      ITEM_PROJECT_ID:
        description: "The issue or PR's graphQL project-specific ID"
        type: string
        required: true

      ITEM_NODE_ID:
        description: "The issue or PR's graphQL node ID"
        default: null
        type: string
        required: true

      # Optional field
      UPDATE_LINKED_ISSUES:
        description: "Whether to update the linked issues' single_select fields"
        default: false
        type: boolean

    secrets:
      ADD_TO_PROJECT_GITHUB_TOKEN:
        description: "Project Access Token"
        required: true

jobs:
  set_text_date_numeric_option_id:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Update item text/date/numeric field
        id: update_item_text_date_numeric_field
        env:
          GH_TOKEN: ${{ secrets.ADD_TO_PROJECT_GITHUB_TOKEN }}
          ENV_FIELD_TYPE: ${{ inputs.FIELD_TYPE }}
          ENV_PROJECT_ID: ${{ inputs.PROJECT_ID }}
          ENV_ITEM_PROJECT_ID: ${{ inputs.ITEM_PROJECT_ID }}
          ENV_FIELD_ID: ${{ inputs.FIELD_ID }}
          ENV_SET_VALUE: ${{ inputs.SET_VALUE }}
        run: |
            # Set the field based on the inputted desired value
            if [ "$ENV_FIELD_TYPE" == "date" ] || [ "$ENV_FIELD_TYPE" == "text" ]; then
              gh api graphql -F projectId="$ENV_PROJECT_ID" \
                           -F itemId="$ENV_ITEM_PROJECT_ID" \
                           -F fieldId="$ENV_FIELD_ID" \
                           -F value="$ENV_SET_VALUE" \
                           -F fieldType="$ENV_FIELD_TYPE" \
                           -f query='
                mutation($projectId: ID!, $itemId: ID!, $fieldId: ID!, $value: String!, $fieldType: String!) {
                  updateProjectV2ItemFieldValue(
                    input: {
                      projectId: $projectId
                      itemId: $itemId
                      fieldId: $fieldId
                      value: { text: $value }
                    }
                  ) {
                    projectV2Item {
                      id
                    }
                  }
                }'

            elif [ "$ENV_FIELD_TYPE" == "number" ]; then
              gh api graphql -F projectId="$ENV_PROJECT_ID" \
                           -F itemId="$ENV_ITEM_PROJECT_ID" \
                           -F fieldId="$ENV_FIELD_ID" \
                           -F value="$ENV_SET_VALUE" \
                           -f query='
                mutation($projectId: ID!, $itemId: ID!, $fieldId: ID!, $value: Float!) {
                  updateProjectV2ItemFieldValue(
                    input: {
                      projectId: $projectId
                      itemId: $itemId
                      fieldId: $fieldId
                      value: { number: $value }
                    }
                  ) {
                    projectV2Item {
                      id
                    }
                  }
                }' | jq --exit-status --raw-output '.data.updateProjectV2ItemFieldValue.projectV2Item.id'

            else
              echo "Error: Invalid field type '$ENV_FIELD_TYPE'. Must be 'date', 'text', or 'number'" >&2
              exit 1
            fi

            # Validate the response
            if [ $? -ne 0 ]; then
              echo "Error: Failed to update field value" >&2
              exit 1
            fi
        continue-on-error: true

  update_linked_issues:
    if: ${{ inputs.UPDATE_LINKED_ISSUES == true }}
    permissions:
      contents: read
    uses: ./.github/workflows/project-update-linked-issues.yaml
    with:
      PROJECT_ID: ${{ inputs.PROJECT_ID }}
      PR_PROJECT_ID: ${{ inputs.ITEM_PROJECT_ID }}
      PR_NODE_ID: ${{ inputs.ITEM_NODE_ID }}
      UPDATE_FIELD_TYPE: ${{inputs.FIELD_TYPE}}
      UPDATE_FIELD_ID: ${{ inputs.FIELD_ID }}
      UPDATE_FIELD_VALUE: ${{ inputs.SET_VALUE }}
    secrets: inherit
